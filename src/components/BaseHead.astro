---
import { ClientRouter } from 'astro:transitions';
import type { HeadProps } from '../types/head';
import { getJsonLd } from '../data/schema.ts';
import FallbackImage from '../assets/fallback.webp';

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image = FallbackImage } = Astro.props as HeadProps;

const jsonLd = getJsonLd({ description });
---

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <meta name="generator" content={Astro.generator} />
  <meta name="title" content={title} />
  <meta name="description" content={description} />

  <meta property="og:type" content="website" />
  <meta property="og:url" content={Astro.url} />
  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  <meta property="og:image" content={new URL(image.src, Astro.url)} />

  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={Astro.url} />
  <meta property="twitter:title" content={title} />
  <meta property="twitter:description" content={description} />
  <meta property="twitter:image" content={new URL(image.src, Astro.url)} />

  <link rel="canonical" href={canonicalURL} />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <link
    rel="preload"
    href="/fonts/BebasNeue-Regular.ttf"
    as="font"
    type="font/ttf"
    crossorigin="anonymous"
  />

  <title>{title}</title>

  <script type="application/ld+json" set:html={JSON.stringify(jsonLd)} />

  <ClientRouter />
</head>
